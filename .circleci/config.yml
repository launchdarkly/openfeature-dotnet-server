version: 2.1

workflows:
  version: 2
  test:
    jobs:
      - build-all
      - test-netcore-linux:
          name: .NET 6.0 - Linux
          docker-image: mcr.microsoft.com/dotnet/sdk:6.0-focal
          build-target-framework: net6.0
          test-target-framework: net6.0
          requires:
            - build-all
      - test-windows:
          name: .NET 6.0 - Windows
          build-target-framework: net6.0
          test-target-framework: net6.0
          requires:
            - build-all
      - test-windows:
          name: .NET Framework 4.7.1 - Windows
          build-target-framework: net471
          test-target-framework: net471
          requires:
            - build-all

orbs:
  win: circleci/windows@5.0.0

jobs:
  build-all:
    docker:
      - image: mcr.microsoft.com/dotnet/sdk:6.0-focal
    steps:
      - checkout
      - run:
          name: restore dependencies
          command: dotnet restore src/LaunchDarkly.OpenFeature.ServerProvider
      - run:
          name: build
          command: dotnet build src/LaunchDarkly.OpenFeature.ServerProvider
      - persist_to_workspace:
          root: src/LaunchDarkly.OpenFeature.ServerProvider
          paths:
            - bin
            - obj

  test-netcore-linux:
    parameters:
      docker-image:
        type: string
      build-target-framework:
        type: string
      test-target-framework:
        type: string
    docker:
      - image: <<parameters.docker-image>>
    environment:
      BUILDFRAMEWORKS: <<parameters.build-target-framework>>
      TESTFRAMEWORK: <<parameters.test-target-framework>>
    steps:
      - run:
          name: install packages
          command: apt -q update && apt install -y make
      - checkout
      - attach_workspace:
          at: src/LaunchDarkly.OpenFeature.ServerProvider
      - run:
          name: restore LaunchDarkly.OpenFeature.ServerProvider.Tests
          command: dotnet restore test/LaunchDarkly.OpenFeature.ServerProvider.Tests
      - run:
          name: run tests
          command: dotnet test test/LaunchDarkly.OpenFeature.ServerProvider.Tests/LaunchDarkly.OpenFeature.ServerProvider.Tests.csproj

  test-windows:
    parameters:
      build-target-framework:
        type: string
      test-target-framework:
        type: string
    executor:
      name: win/default
      shell: powershell.exe
    environment:
      BUILDFRAMEWORKS: <<parameters.build-target-framework>>
      TESTFRAMEWORK: <<parameters.test-target-framework>>

    steps:
      - checkout
      - attach_workspace:
          at: src/LaunchDarkly.OpenFeature.ServerProvider
      - run:
          name: install project dependencies
          command: dotnet restore test/LaunchDarkly.OpenFeature.ServerProvider.Tests
      - run:
          name: run tests
          command: dotnet test test/LaunchDarkly.OpenFeature.ServerProvider.Tests/LaunchDarkly.OpenFeature.ServerProvider.Tests.csproj
